## **SQL Queries and Insights**  

# Whate are the different types of categories?

Select category from data;

### **Q1. Total revenue generated by each product category**  

Select category , sum(total_sale) as revenue 
from data
group by category
Order by revenue;


### **Q2. Top 5 customers contributing the most to sales**  

select customer_id , sum(total_sale) as revenue 
from data
group by  customer_id  
order by revenue desc 
limit 5;

# Q2.a Top customer in each Category

select category , customer_id , sum(total_sale),
rank() over(partition by  category order by sum(total_sale) desc)
as  rn from data 
group by category, customer_id;


### **Q3. Which gender contributes the most to sales revenue?**  

select gender , sum(total_sale) as revenue
from data
group by gender
order by revenue desc;


### **Q4. Age distribution of customers purchasing products**  

Select age , count(distinct customer_id) as unique_customer,
sum(total_sale -cogs) as revenue
from data
group by age
order by revenue , unique_customer;

### **Q5. Seasonal trends or patterns in sales based on sale dates**   -- homework 

### **Q6. Most profitable product category in terms of revenue and COGS**  

select distinct category , count(distinct customer_id) as unique_customer, 
Round(sum(total_sale - cogs),2)
 as revenue from data
 group by category order by revenue desc;


### **Q.7 Write a SQL query to calculate the average sale for each month. Find out best selling month in each year**  

Select year, month, avg_sale
from
(
Select year(sale_date) as year,
month(sale_date) as month,
avg(total_sale) as avg_sale,
Rank() over(partition by year(sale_date) order by avg(total_sale) desc) as rn
from data
group by year , month
) as t1
where rn = 1;

### **Q8. Top 5 customers based on the highest total sales**   -- homework

Select customer_id , max(total_sale) as rn
from data
group by customer_id
order by rn desc
limit 5;

### **Q9. Number of unique customers who purchased items from each category**  

Select category, count(distinct customer_id) as unique_customers
 from data
 group by category;
 
 
 ### **Q10. Create shifts and calculate the number of orders for each shift**  
-- morning
-- evening 
-- afternoon 

# using case statements
Select 
Case
	When hour(sale_time) < 12 Then 'Morning'
    When hour(sale_time)  between 12 and 15 Then 'Afternoon'
    else 'Evening' 
End as Shift,
count(*) as total_orders
from data
group by shift